name: Release to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          8.0.x
          9.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Create NuGet packages
      run: |
        mkdir -p dist
        # Core package
        dotnet pack BlazorMicrofrontends.Core/BlazorMicrofrontends.Core.csproj -c Release -o dist
        # Host package
        dotnet pack BlazorMicrofrontends.Host/BlazorMicrofrontends.Host.csproj -c Release -o dist
        # Integration package
        dotnet pack BlazorMicrofrontends.Integration/BlazorMicrofrontends.Integration.csproj -c Release -o dist
        # AppShell package
        dotnet pack BlazorMicrofrontends.AppShell/BlazorMicrofrontends.AppShell.csproj -c Release -o dist
        # CLI package
        dotnet pack BlazorMicrofrontends.CLI/BlazorMicrofrontends.CLI.csproj -c Release -o dist
        # Templates package
        dotnet pack BlazorMicrofrontends.Templates/BlazorMicrofrontends.Templates.csproj -c Release -o dist
        
    - name: Publish NuGet packages
      run: |
        for package in dist/*.nupkg; do
          dotnet nuget push "$package" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
        done 